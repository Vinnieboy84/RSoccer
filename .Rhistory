x <- 4
class(x)
x <- c(4, TRUE)
class(x)
x
x <- c(1,3, 5)
x
y <- c(3, 2, 10)
rbind(x,y)
size(rbind(x,y))
dimentions(rbind(x,y))
c <- rbind(x,y)
c
dim(c)
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- c(17, 14, 4, 5, 13, 12, 10)
x <- x>10 = 4
x[x > 10] <- 4
x
read.csv("C:\Users\Vincent\Documents\Coursera Data Scientist\hw1_data.csv")
read.csv("C:/Users/Vincent/Documents/Coursera Data Scientist/hw1_data.csv")
A <- read.csv("C:/Users/Vincent/Documents/Coursera Data Scientist/hw1_data.csv")
A([1:3,])
A[1:3,]
A[length(A)-2:length(A),]
A[(length(A)-2):(length(A)),]
lenght(A)
length(A)
size(A)
rows(A)
nrow(A)
A[(nrow(A)-2):(nrow(A)),]
A[47, ]
is.na(A$Ozone)
sum(is.na(A$Ozone))
mean(A$Ozone)
mean(!is.na(A$Ozone)
)
B <- A(!is.na(A$Ozone))
B <- A[!is.na(A$Ozone), ]
B
mean(B$Ozone)
C <- A[A$Ozone > 31 and A$Temp > 90]
C <- A[A$Ozone > 31, A$Temp > 90]
C <- A[A$Ozone > 31 & A$Temp > 90]
C <- A[A$Ozone > 31 && A$Temp > 90]
C\
C
C <- subset(A, Ozone > 31 | Temp > 90)
C
mean(C$Solar.R)
D <- C[!is.na(C$Solar.R), ]
mean(D$Solar.R)
C <- subset(A, Ozone > 31 & Temp > 90)
D <- C[!is.na(C$Solar.R), ]
mean(D$Solar.R)
E <- A$Month == 5
E
E <- A(A$Month == 5)
E <- A[(]A$Month == 5),]
E <- A[(A$Month == 5),]
E
F <- E[!is.na(E$Temp), ]
mean(F$Temp)
E <- A[(A$Month == 6),]
F <- E[!is.na(E$Temp), ]
mean(F$Temp)
G <- A[(A$Month == 6),]
G <- A[(A$Month == 5),]
max(G$Ozone)
H <- G[!is.na(G$Ozone), ]
max(H$Ozone)
setwd("C:/Users/Vincent/Documents/Bookie Model R/Data")
fileUrl <- "www.football-data.co.uk/mmz4281/1516/N1.csv"
download.file(fileUrl, destfile = "/N1/netherlandstmp.csv")
setwd("C:/Users/Vincent/Documents/Bookie Model R/Data")
fileUrl <- "www.football-data.co.uk/mmz4281/1516/N1.csv"
download.file(fileUrl, destfile = "./N1/netherlandstmp.csv")
setwd("C:/Users/Vincent/Documents/Bookie Model R/Data")
fileUrl <- "www.football-data.co.uk/mmz4281/1516/N1.csv"
download.file(fileUrl, destfile = "./N1/netherlandstmp.csv")
setwd("C:/Users/Vincent/Documents/Bookie Model R/Data")
fileUrl <- "www.football-data.co.uk/mmz4281/1516/N1.csv"
download.file(fileUrl, destfile = "netherlandstmp.csv")
setwd("C:/Users/Vincent/Documents/Bookie Model R/Data")
fileUrl <- "www.football-data.co.uk/mmz4281/1516/E0.csv"
download.file(fileUrl, destfile = "./N1/netherlandstmp.csv")
setwd("C:/Users/Vincent/Documents/Bookie Model R/Data")
fileUrl <- "http://www.football-data.co.uk/mmz4281/1516/E0.csv"
download.file(fileUrl, destfile = "./N1/netherlandstmp.csv")
fileTMP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fielTMP, destfile = "./TMP/Quiz1-Q1.csv)
)
)
q
f
asfg
sag
asg
as
dg
asg
sd
g;
stop
quit
q
err
""
fileTMP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileTMP, destfile = "./TMP/Quiz1-Q1.csv)
fileTMP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
fileTMP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileTMP, destfile = "./TMP/Quiz1-Q1.csv)
")
fileTMP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileTMP, destfile = "./TMP/Quiz1-Q1.csv")
A <- assign(Qz1Q1, read.csv(paste("./TMP/", "./TMP/Quiz1-Q1.csv", sep=''))
)
A <- assign(Qz1Q1, read.csv(paste("../TMP/", "../TMP/Quiz1-Q1.csv", sep='')))
A <- assign("Qz1Q1", read.csv(paste("../TMP/", "../TMP/Quiz1-Q1.csv", sep='')))
A <- assign("Qz1Q1", read.csv(paste("./TMP/", "./TMP/Quiz1-Q1.csv", sep='')))
A <- assign("Qz1Q1", read.csv(paste(".\TMP", ".\TMP\Quiz1-Q1.csv", sep='')))
A <- assign("Qz1Q1", read.csv(paste("..\TMP", "..\TMP\Quiz1-Q1.csv", sep='')))
A <- read.csv(paste("./TMP", "./TMP/Quiz1-Q1.csv", sep=','))
A <- read.csv("./TMP/Quiz1-Q1.csv", sep=',')
A
B <- A$VAL >= 24
B <- A[A$VAL >= 24]
A$VAL >= 24
A[A$VAL >= 24]
A[A$VAL >= 24, ]
B < - A[A$VAL >= 24, ]
B <- subset(A, A$VAL >=24)
B
install.packages("xlsx")
library("xlsx")
install.packages("rJava")
install.packages("xlsxjars")
install.packages("rJava")
install.packages("rJava")
install.packages("xlsxjars")
library("xlsx")
library("xlsxjars")
library("rJava")
library("xlsx")
fileTMP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileTMP, destfile = "./TMP/Quiz1-Q2.xlsx")
download.file(fileTMP, destfile = "./TMP/Quiz1-Q2.xlsx")
C <- read.xlsx("./TMP/Quiz1-Q1.csv")
C <- read.xlsx("./TMP/Quiz1-Q2.xlsx")
C <- read.xlsx("./TMP/Quiz1-Q2.xlsx", Sheetindex = 1)
C <- read.xlsx("./TMP/Quiz1-Q2.xlsx", sheetIndex =1)
C <- read.xlsx("./TMP/Quiz1-Q2.xlsx", sheetIndex =1, header = TRUE)
fileTMP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileTMP, destfile = "./TMP/Quiz1-Q2.xlsx", mode = "wb")
C <- read.xlsx("./TMP/Quiz1-Q2.xlsx", sheetIndex =1, header = TRUE)
C
CID <- 17:15
RID <- 18:23
C <- read.xlsx("./TMP/Quiz1-Q2.xlsx", sheetIndex =1, colIndex = CID, rowIndex = RID)
C
\C
C
sum(C$Zip*C$Ext,na.rm=T)
CID <- 7:15
RID <- 18:23
C <- read.xlsx("./TMP/Quiz1-Q2.xlsx", sheetIndex =1, colIndex = CID, rowIndex = RID)
sum(C$Zip*C$Ext,na.rm=T)
install.packages("xml")
library("xml")
install.packages("XML")
library("XML")
fileTMP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
download.file(fileTMP, destfile = "./TMP/Quiz1-Q4.xml", mode = "wb")
D <- xmlTreeParse(fileTMP, useInternal = TRUE)
D <- xmlTreeParse(fileTMP, useInternalNodes = TRUE)
D <- xmlTreeParse("./TMP/Quiz1-Q4.xml", useInternalNodes = TRUE)
D
D <- xmlTreeParse("./TMP/Quiz1-Q4.xml", useInternal = TRUE)
D
roodnode <- xmlRoot(D)
xmlName(roodnode)
xpathSApply(xmlRoot(D), "//zipcode", xmlValue)
E <- xpathSApply(xmlRoot(D), "//zipcode", xmlValue)
F <- subset(E, E == 21231)
fileTMP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileTMP, destfile = "./TMP/Quiz1-Q5.csv")
F <- fread(read.csv("./TMP/Quiz1-Q5.csv", sep=','))
install.packages("data.table")
library("data.table")
F <- fread(read.csv("./TMP/Quiz1-Q5.csv", sep=','))
F <- fread("./TMP/Quiz1-Q5.csv")
F
DT ;/ F
DT <- F
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
within system.time(mean(DT$pwgtp15,by=DT$SEX))
Q <- sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(Q)
system.time(Q <- sapply(split(DT$pwgtp15,DT$SEX),mean))
Q
system.time(Q1 <- sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(Q2 <- tapply(DT$pwgtp15,DT$SEX,mean))
Q2
system.time(Q3 <- mean(DT$pwgtp15,by=DT$SEX))
Q3
system.time(Q4 <- rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(Q5 <- DT[,mean(pwgtp15),by=SEX])
Q5
system.time(Q6 <- mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
F <- subset(E, E == 21231)
Q1
time <-  system.time(Q1 <- sapply(split(DT$pwgtp15,DT$SEX),mean))
time
time <- system.time(Q2 <- tapply(DT$pwgtp15,DT$SEX,mean))
time
Q2
time <- system.time(Q3 <- mean(DT$pwgtp15,by=DT$SEX))
time
Q3
time <- system.time(Q5 <- DT[,mean(pwgtp15),by=SEX])
Q5
time
time
list.files(path="http://www.football-data.co.uk/mmz4281/", pattern="*.csv")
list.files(path="http://www.football-data.co.uk/mmz4281/1516/", pattern="*.csv")
A <- list.files(path="http://www.football-data.co.uk/mmz4281/1516/", pattern="*.csv")
A
list.files(path="http://www.football-data.co.uk/mmz4281/1516/")
url <- "http://www.football-data.co.uk/mmz4281/"
doc <- htmlParse(url)
links <- xpathSApply(doc, "//N1")
library("XML")
doc <- htmlParse(url)
url <- "http://cran.r-project.org/src/contrib/Archive/Amelia/"
doc <- htmlParse(url)
DOC
doc
url <- "http://www.football-data.co.uk/mmz4281/1516/"
doc <- htmlParse(url)
doc <- htmlParse(url)
list.files(path="http://www.football-data.co.uk/mmz4281/1516/", pattern="*.csv")
list.files(path="C:/Users/Vincent/Documents/Bookie Model R/Data/N1", pattern="*.csv")
list.files(path="http://www.football-data.co.uk/mmz4281/1516", pattern="*.csv")
#set workdirectory
setwd("C:/Users/Vincent/Documents/Bookie Model R/Data")
#Create (if needed) subdirectories
if (!file.exists("E1")){ dir.create(file.path(getwd, "E1")) }
A <- file.path(getwd, "E1")
file.path(getwd, "E1")
file.path(getwd(), "E1")
setwd("C:/Users/Vincent/Documents/Bookie Model R/Data")
#Create (if needed) subdirectories
if (!file.exists("E1")){ dir.create(file.path(getwd(), "E1")) }
#set workdirectory
setwd("C:/Users/Vincent/Documents/Bookie Model R/Data")
#Create (if needed) subdirectories
#England
if (!file.exists("E0")){ dir.create(file.path(getwd(), "E0")) }
if (!file.exists("E1")){ dir.create(file.path(getwd(), "E1")) }
if (!file.exists("E2")){ dir.create(file.path(getwd(), "E2")) }
if (!file.exists("E3")){ dir.create(file.path(getwd(), "E3")) }
if (!file.exists("EC")){ dir.create(file.path(getwd(), "EC")) }
#Scotland
if (!file.exists("SC0")){ dir.create(file.path(getwd(), "SC0")) }
if (!file.exists("SC1")){ dir.create(file.path(getwd(), "SC1")) }
if (!file.exists("SC2")){ dir.create(file.path(getwd(), "SC2")) }
if (!file.exists("SC3")){ dir.create(file.path(getwd(), "SC3")) }
#Germany
if (!file.exists("D1")){ dir.create(file.path(getwd(), "D1")) }
if (!file.exists("D2")){ dir.create(file.path(getwd(), "D2")) }
#Italy
if (!file.exists("I1")){ dir.create(file.path(getwd(), "I1")) }
if (!file.exists("I2")){ dir.create(file.path(getwd(), "I2")) }
#Spain
if (!file.exists("SP1")){ dir.create(file.path(getwd(), "SP1")) }
if (!file.exists("SP2")){ dir.create(file.path(getwd(), "SP2")) }
#France
if (!file.exists("F1")){ dir.create(file.path(getwd(), "F1")) }
if (!file.exists("F2")){ dir.create(file.path(getwd(), "F2")) }
#Netherlands
if (!file.exists("N1")){ dir.create(file.path(getwd(), "N1")) }
#Belgium
if (!file.exists("B1")){ dir.create(file.path(getwd(), "B1")) }
#Portugal
if (!file.exists("P1")){ dir.create(file.path(getwd(), "P1")) }
#Turkey
if (!file.exists("T1")){ dir.create(file.path(getwd(), "T1")) }
#Greece
if (!file.exists("G1")){ dir.create(file.path(getwd(), "G1")) }
seasons <- c("0506","0607","0809","0910")
seasons
seasons[2]
seasons <- c("0506","0607","0809","0910", "1011", "1112", "1213", "1314", "1415", "1516")
competitions <- c("E0","E1","E2","E3","EC","SC0","SC1","SC2","SC3"
,"D1","D2","I1","I2","SP1","SP2","F1","F2","N1"
,"B1","P1","T1","G1")
competitions[6]
A <- paste(URLfold, seasons[1], competitions[1], ".csv", sep='')
URLfold <- "http://www.football-data.co.uk/mmz4281/"
A <- paste(URLfold, seasons[1], competitions[1], ".csv", sep='')
A
for (i in 1:length(seasons)) {
for (j in 1:length(competitions)) {
download.file(paste(URLfold, seasons[i], "/", competitions[j], ".csv", sep=''), destfile = paste("./", competitions[j], "/", competitions[j], "_", seasons[i], ".csv", sep='')
}
}
i <- 1
for (j in 1:length(competitions))
{
download.file(paste(URLfold, seasons[i], "/", competitions[j], ".csv", sep=''), destfile = paste("./", competitions[j], "/", competitions[j], "_", seasons[i], ".csv", sep='')
}
for (j in 1:length(competitions))
{
FileName <- paste(URLfold, seasons[i], "/", competitions[j], ".csv", sep='')
des_file <- paste("./", competitions[j], "/", competitions[j], "_", seasons[i], ".csv", sep='')
download.file(FileName, destfile = des_file)
}
#set workdirectory
setwd("C:/Users/Vincent/Documents/Bookie Model R/Data")
#Create (if needed) subdirectories
#England
if (!file.exists("E0")){ dir.create(file.path(getwd(), "E0")) }
if (!file.exists("E1")){ dir.create(file.path(getwd(), "E1")) }
if (!file.exists("E2")){ dir.create(file.path(getwd(), "E2")) }
if (!file.exists("E3")){ dir.create(file.path(getwd(), "E3")) }
if (!file.exists("EC")){ dir.create(file.path(getwd(), "EC")) }
#Scotland
if (!file.exists("SC0")){ dir.create(file.path(getwd(), "SC0")) }
if (!file.exists("SC1")){ dir.create(file.path(getwd(), "SC1")) }
if (!file.exists("SC2")){ dir.create(file.path(getwd(), "SC2")) }
if (!file.exists("SC3")){ dir.create(file.path(getwd(), "SC3")) }
#Germany
if (!file.exists("D1")){ dir.create(file.path(getwd(), "D1")) }
if (!file.exists("D2")){ dir.create(file.path(getwd(), "D2")) }
#Italy
if (!file.exists("I1")){ dir.create(file.path(getwd(), "I1")) }
if (!file.exists("I2")){ dir.create(file.path(getwd(), "I2")) }
#Spain
if (!file.exists("SP1")){ dir.create(file.path(getwd(), "SP1")) }
if (!file.exists("SP2")){ dir.create(file.path(getwd(), "SP2")) }
#France
if (!file.exists("F1")){ dir.create(file.path(getwd(), "F1")) }
if (!file.exists("F2")){ dir.create(file.path(getwd(), "F2")) }
#Netherlands
if (!file.exists("N1")){ dir.create(file.path(getwd(), "N1")) }
#Belgium
if (!file.exists("B1")){ dir.create(file.path(getwd(), "B1")) }
#Portugal
if (!file.exists("P1")){ dir.create(file.path(getwd(), "P1")) }
#Turkey
if (!file.exists("T1")){ dir.create(file.path(getwd(), "T1")) }
#Greece
if (!file.exists("G1")){ dir.create(file.path(getwd(), "G1")) }
seasons <- c("0506","0607","0809","0910", "1011", "1112", "1213", "1314", "1415", "1516")
competitions <- c("E0","E1","E2","E3","EC","SC0","SC1","SC2","SC3"
,"D1","D2","I1","I2","SP1","SP2","F1","F2","N1"
,"B1","P1","T1","G1")
URLfold <- "http://www.football-data.co.uk/mmz4281/"
for (i in 1:length(seasons))
{
for (j in 1:length(competitions))
{
FileName <- paste(URLfold, seasons[i], "/", competitions[j], ".csv", sep='')
des_file <- paste("./", competitions[j], "/", competitions[j], "_", seasons[i], ".csv", sep='')
download.file(FileName, destfile = des_file)
}
}
folder <- paste("./", competitions[j], sep='')
file_list <- list.files(path=folder, pattern="*.csv")
assign(file_list[i], read.csv(paste(folder, file_list[i], sep=''))
)
assign(file_list[i], read.csv(paste(folder, "/", file_list[i], sep='')))
countries[6]
competitions[1]
paste(competitions[1]) <- 1
data[j] = data.frame(total)
data[j] = data.frame(1)
1
data[j] = data.frame([1 2 3])
library("gtools")
#package for smartbind
setwd("C:/Users/Vincent/Documents/Bookie Model R/Data")
seasons <- c("0506","0607","0809","0910", "1011", "1112", "1213", "1314", "1415", "1516")
competitions <- c("E0","E1","E2","E3","EC","SC0","SC1","SC2","SC3"
,"D1","D2","I1","I2","SP1","SP2","F1","F2","N1"
,"B1","P1","T1","G1")
for (j in 1:length(competitions))
{
folder <- paste("./", competitions[j], sep='')
file_list <- list.files(path=folder, pattern="*.csv")
for (i in 1:length(file_list))
{
assign(file_list[i], read.csv(paste(folder, "/", file_list[i], sep='')))
set_complete <- complete.cases(get(file_list[i]))
set_fixed <- get(name_list[i])
set_fixed <- set_fixed[set_complete,]
if (sum(complete.cases(set_fixed))>0)
{
set_fixed$Season = i
if (!exists("total")){
total <- set_fixed
}
# if the merged dataset does exist, append to it
if (exists("total")){
total<-smartbind(total, set_fixed)
}
}
}
#data[j] = data.frame(total)
#rm(total)
}
for (j in 1:length(competitions))
{
folder <- paste("./", competitions[j], sep='')
file_list <- list.files(path=folder, pattern="*.csv")
for (i in 1:length(file_list))
{
assign(file_list[i], read.csv(paste(folder, "/", file_list[i], sep='')))
set_complete <- complete.cases(get(file_list[i]))
set_fixed <- get(file_list[i])
set_fixed <- set_fixed[set_complete,]
if (sum(complete.cases(set_fixed))>0)
{
set_fixed$Season = i
if (!exists("total")){
total <- set_fixed
}
# if the merged dataset does exist, append to it
if (exists("total")){
total<-smartbind(total, set_fixed)
}
}
}
#data[j] = data.frame(total)
#rm(total)
}
View(total)
data[1] = data.frame(total)
data[[j]] = data.frame(total)
setwd("C:/Users/Vincent/Documents/Bookie Model R/Data")
seasons <- c("0506","0607","0809","0910", "1011", "1112", "1213", "1314", "1415", "1516")
competitions <- c("E0","E1","E2","E3","EC","SC0","SC1","SC2","SC3"
,"D1","D2","I1","I2","SP1","SP2","F1","F2","N1"
,"B1","P1","T1","G1")
assign(competitions[1], as.data.frame)
competitions[1]
View(E0)
assign(competitions[1], as.data.frame(total))
View(E0)
library("gtools")
#package for smartbind
setwd("C:/Users/Vincent/Documents/Bookie Model R/Data")
seasons <- c("0506","0607","0809","0910", "1011", "1112", "1213", "1314", "1415", "1516")
competitions <- c("E0","E1","E2","E3","EC","SC0","SC1","SC2","SC3"
,"D1","D2","I1","I2","SP1","SP2","F1","F2","N1"
,"B1","P1","T1","G1")
for (j in 1:length(competitions))
{
folder <- paste("./", competitions[j], sep='')
file_list <- list.files(path=folder, pattern="*.csv")
for (i in 1:length(file_list))
{
assign(file_list[i], read.csv(paste(folder, "/", file_list[i], sep='')))
set_complete <- complete.cases(get(file_list[i]))
set_fixed <- get(file_list[i])
set_fixed <- set_fixed[set_complete,]
if (sum(complete.cases(set_fixed))>0)
{
set_fixed$Season = i
if (!exists("total")){
total <- set_fixed
}
# if the merged dataset does exist, append to it
if (exists("total")){
total<-smartbind(total, set_fixed)
}
}
}
assign(competitions[j], as.data.frame(total))
rm(total)
}
View(SP1)
